(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     61474,       1135]
NotebookOptionsPosition[     60420,       1108]
NotebookOutlinePosition[     60857,       1125]
CellTagsIndexPosition[     60814,       1122]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\mi\\\\CLionProjects\\\\HorizRK\\\\cmake-build-debug\>\"\
", "]"}]], "Input",
 CellChangeTimes->{{3.8117558688121195`*^9, 3.8117559069790215`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f8289c37-c6be-4dee-94f3-69d43ca006ed"],

Cell[BoxData["\<\"C:\\\\Users\\\\mi\\\\CLionProjects\\\\HorizRK\\\\cmake-\
build-debug\"\>"], "Output",
 CellChangeTimes->{3.811755874269805*^9, 3.811755908173827*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"66cff38d-55e6-4f83-8238-73203ac7d51d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rk4", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<rk4.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eu", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<euler.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euMod", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<euler_mod.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.81175593396043*^9, 3.8117559745963364`*^9}, {
  3.8117560589457006`*^9, 3.81175608727284*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"928cf6d3-8064-4430-a1bb-8ef8bb7dd41d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rk4", ",", " ", "eu", ",", " ", "euMod"}], "}"}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<RK4\>\"", ",", "\"\<Euler\>\"", ",", "\"\<Modified Euler\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8117559759568977`*^9, 3.8117559882064805`*^9}, {
  3.8117561157668333`*^9, 3.811756191766119*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e2a280af-5805-4e91-a909-5494fad5c208"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9, 0.36, 0.054], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.365248, 0.427802, 0.758297], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nVYlNv3NnC6Y4AZmCEn6O4S2Iu0v2InNhjY3UdssTCwsTuwu1vsQEBE
JERAQVIa/M2c5z7vdb3zjxcys5+91mfd+xkGJKOn9olXUVJSKlVVUlL8+/8/
qtlCfnrnwgUr2LBND/84DqvC19vYwDkPCnbf+s2uW6/81fv6PtbkqyHpav0b
3z/CKho1BjqsqGS7dykeJ9mqncfGOFVW4PnpTDMoa3Tk4ApW0VvxPxfY4BN1
5yc8/4XXX2a9OyaWpAT/YjrZh6eF6lxjl/Zc/XD23E+sd4PNf6qUdMXhJ3P6
d2O32ceTMve0Q+VY/y7bbpUwaIi4nB2Rvzr78H32Jv/upaIDZbjeA5Yy9obI
1baM+fz7eMT6+Z856XqqFNd/zPamLjuR613KHsmr3vTwCUuZtm2P690f2M8z
dkZ3mqOoxw/W598LPmcHU/o678grwf4y2AADt4tpU0tY4QLFgi/Y3Z7/NMjU
S7DfV6zLLuvhkrTvbLpie9NeM6fBHxZsCPiO/b9hg0z6a4/MLGacwzvW/e3F
hpSZxajnHTNa/babUFDMuvx7gffs1OK0Lr+vF6G+9+xs2Y+euiOK2L9smz6w
uRYTisdpFqHej2ymbM61tguF7N9ysj8yk+f1aQ+HF6L+TJabPDLlon4hs1Fs
x/oT63s84+yTuwXoxyc24twcvz/TC1jCv48s5rHu+6pghwL0J5vNT9IYbH3n
G1Osxk/PZvcz5q3/7PEN/cph0/p9Dt19LJ81KJb7k8OaEzcH9pPko3+fmQrd
XNy6/yv7tz2huex2p75jV0i/op+5zKLsf1OKT+Sxf7e38gvrfKlXX32fPPQ3
j/Guj9VtvP+FvX6leOSxJQ09Hqf2+YJ+f2Vniqob8ktz2b/l8vOZbuepIc+X
5qL/+eydbu6gzla5mPtv7Ho/p4Q+dz7Do4CNzXyz9dvIz6ingK27ED+sRPMz
fArY04MqsUMu5qC+AvbsTXFXv5E58Cpk553UPCcb5aDeQrbvmHLX5ifZ8Ctk
Z4MWfHm3OBv1FzFed7/5vwKz4VnEvr2fmUGNWehHERt7yv7k8+tZ8C1mYZqz
BQsXZ6E/xezSs9rusdFZ8C5m2i99komXhX59Z/quF8dE5X+C/3fW8erInH7n
PqF/31nRWb/1E5Z/wjyUsLQ4reWLhnxCP0vYLTO3Bat8P2E+SpjVlJ/nlxp9
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
fKAfU2OQD/RrYQzygX6ujqH/AybaCEc=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.945109, 0.593901, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2mVclOnbxnGkmyEGBhiGCbq74TpJXREDxW5sMVdFLOwWO/CPgond3Y2d
lAhICygiIR3PuHP44uHNflxg5r7O7/m7Z8Zd0fhZ0RPl5eTkvinIyf355///
+sUWG5zrWbxoNbPqsql+PaoWf97FFnzcZp957ye7IVjzfcCNg6y2u3S1muQn
vn+U8cOvao7bWMP2J//5Osm2mTh0v238gZ8/x0jNv7Dn+B/sx4A//+YiG5y4
etyDj9/x+1fY8Pb5ax0jvjP1nCOzA9Wvs6KrurNX36nG491kFruerbjlWc1s
R2599NvmDuv7RHf404tVePx7rM+O2Ef7XarYUelv5xx5wFp3+N13uVSJ53vI
ArmnFi31qmTu/309ZqMXbpsQf/cbnv8J+z1HXovb8xt7/NtG+gxP2aeUJ75R
nypwPRmsbWFkheH4Chb93xM+Z0/yg52mNpTj+l6we6vkY/3XlbPiRX8e8CVb
XrqkfbVZOa73NfsyuP/RwGtlbM6fy5v9hqXXX3AeNaAM1/+W6YvVtn35Wcpk
Du+ZX/KH+gtJpTjPexbrfXB3lksp6/XfE3xgCetnNQVnleB8H1jv9Psnfi4u
YX+ebeTWj+zilAMTMy1KcN5P7O7aDNMf74rZf8fJ+cR+rrz5xGlpMc6fyS5b
d+7a7VDMzP9cjiCLHZvm/cG4sAjzyGLCMXJVV7YXsUn/fWWzLR9Xzxnbswjz
yWFxIdl2Dl1f2Z9HMziXw2I2Jg9KnfMV88pl15MSvLSrClnTn4f7ncu6UlZ2
xE0oxPw+swXb/SrPlxaw/8YTmMc+6607/mpSAeaZx/pvVa+9UpPP/ru8NV/Y
LJZRNnZhPuabz16NuH/qiXI+e/P6z1c+qzff9yRr3xfMu4A9NXPM3uD0hf13
XINCxkasepudkYf5F7Lnx0amX5qQx/57uJFf2bM3Zrf1lfLgUcS0p1fO/HXi
M85TxDr7P1nK+n+GTxGrj755uLktF+crYuE957bqnMyFVzG7/2rwicThuThv
MRsVu0wjSCcXfsUsZsGFKyEZOTh/CXN8XB2zZmUOPEuYq5XgdSflYB4lbHay
k/lR+Rz4ljK3jvObZ2dkYz6lzP53/cgRW7PhXcp6clq0Rg3PxrzK2Kl7swbO
tMmGfxn7d4568brWLMyvjEVljX5w+E0W9qGcle5RaL9+NAvzLGduN5/eerAs
C/tRzgq/F069NiIL861gmwrXz93hn4V9qWD6Vmfn9ZXulWzeFezI2ekuZQpZ
2J9v7J/aUYujfmRi/t9Y3krO4NU5mdinb0x964bslU8z4VHJyrYpuYdey4RH
JRuwy+/6/ZOZ8KhkczcmldWnZsKjkn22t+iZsy8THlVsY0ve/Mm7MuFRxW7H
hAQe3JEJjyq23js2ccHOTHhUs9GVS4K+78mERzXz+647tzklEx7VzMX77cg9
xzLh8Z2Vtad5Pb6QCY/vLPL++SEJ9zLh8Z1dGDXY58rbTHj8YEEh0ybNKs6E
xw+2M3XpouNNmfD4wTjPuD4x2n89atixoPYh8TZ/PWpYQvzx56rhfz1qmOh4
n1VKE/56/GTHM75umrrmr8dPNsF5vbLryb8eP9lVl5lGQ9/99ahl9orTeF+a
s+BRy2JKBsZeE2fDo5Y9U1CMruiXzf6+bny4Fz51cuLf/frFglwP+XhdzIbP
L3ZFhTexX/nfffvFoq5NOXjeNAdev5gSvTo5cFAOzvuL5aTH9/HZmgO/X+x3
VsyK4a9zcP46FjjSSHJd429fdcw9Ia9PZFQu5lHHVLnrWvW3/+2tjl30bOmr
nZOL+dQxldkr13ubf4Z3Het+Ifd689TPmFc982q6lahx7TP869kEXmLjBcU8
zK+eXTXNXbMoJg/7UM9OBK87P/HE3/tJPbv9KqpmVmce9qOe9d046f2eQV8w
3wbmxn3RmHP2C/algZ1+ZdvDVS0f825gHZqBKamT/t7vGtjNpJrNomf5mH8D
W6Rstf+KdQH2qYGF123ZPXhTATwamcKIiElKdQXwaGSO6y9X3htaCI9GlqQ/
23jFo0J4NLL6vYa//3H6Co9GpsxubzFK+QqPRvZqQEdtg1IRPBrZBuXpu/KD
iuDxmxXMzLr+ZGERPH6zRKf7C09fLoLHb2Zddfr31toiePxm20LMo+ZIX29k
Hr9Z2bFhJ/pOK4bHb5Z3rdDS+mQxPJrYcw317tbKYng0sa3/Lhr/zLYEHk3s
pdBx9abpf1//mti7k0sP9DpXAo8mNi5udX1HXQk8mtjm8e0P071K4dHMjKrb
+vVaUgqPZrb0SWt5waNSeDSzgMsz30xWL4NHM+s4/H1MeXQZPJrZKf7RupiU
Mng0s6fF2q9vVJTBo4WZqX8equX29/1AC0sTeP2IXlYOjxZm7v2pdv2rcni0
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
+Xge8DDF+T3gYUrp5pnh6r4e8DAlDW3n9b3+8YCHKXleDxm6ZZgHPEzJylTn
Wu5UD3iYUqHvrkN2izzgYUqj9T+arNroAQ9TOpr+XFSy3wMepnSpKf5az9Me
8DCltXJFuZdve8DDlMRP5TZYvfaAhymtCct7lprvAQ9TOrcsbod5jQc8TCn1
3+vfj3V6wMOUhkhuf3TT9oSHKWVvie/5TOAJD1PiX/7xz1hnT3jwZa+f5AkP
PnU69mhJ7+8JDz4lr0o7EjPOEx58at/Zkq821xMefLIYo3b0yUpPePCJW/6x
Zc1OT3jw6bVlzJeoo57w4FOkaFsk/6onPPi0LWfVP3VPPeHBpwO9XLJeZ3vC
g09z5u3+ee6bJzz4ss87LZ7w4NPMjg0v16p5wYNPe4cab1li4gUPPq2bJX1D
Z+8FDz4FBY+/vTjACx58uvPG1HpNlBc8+NSDmyTcPdoLHnySfjpIPz3LCx58
Kv6Ucuf5ci948GlxpO+YH9u94MGngqVJWw2PeMGDT0rTU6J6XvGCB59+68Um
L3vqBQ8+nZ5fMvdOthc8zGQelV7wMKOZ0zXeRbZ6wcOMFnVdGXBA3RseZhTV
x2j8b1NveJjRt0FucoMcveFhRr14yg43g7zhYUaz9+wot+jvDQ8zGvMux2Hv
OG94mJHh46wenH+94WFGO+dsnrB1tTc8zCgnr30Qd483PMyotEvy6VC6NzzM
6GqB4lePm97wMKN+8QcXvn3pDQ8zuvDqV+rMfG944PF+esPDjJ4dvb/3Ubc3
PMxoiW3AlAW6PvAwo9Ypc565SHzgYUaBsWMu1Xn4wAPnjfCBhxmZrJ/ovm6o
DzzM6PKlpc9HTPOBhxkZ7Ov73WuJDzzMyN8n93+8JB94CGQeaT7wENDXE9zj
tRd94CGgEQkvusse+8BDQKmKXt+KsnzgIaCTvUeMLP3mAw+BbF9afeAhIAOV
97XtGr7wENC8pebaegJfeAjof+esbzm5+MJDQBv2VzYMCPGFh0C2z4N84SGg
W4d3cc5M8oWHgDrvJTaULPSFh4BU9kgmCDf5wkNAn62Xj59wwBceAllv533h
IaD3i2NV5R75wkNAzYHV54dk+sJDQGW3bMuvVvjCQ0DJ9aITJq2+8BDI7gca
fvAQ0NAdATnNZn7wENC4ttGhs1384CEgNzO/wNoQP3gI6GXbmyfzYvzgYS7z
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
EegD542NQB+Yx6wI9IF5LY5AH5jnugj6P4/FFR4=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"y\"", TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 9.98}, {0, 45.060213}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"RK4\"", "\"Euler\"", "\"Modified Euler\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.36`", ",", "0.054`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.365248`", ",", "0.427802`", ",", "0.758297`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.945109, 0.593901, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6300726666666667, 0.395934, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.945109`", ",", "0.593901`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.945109, 0.593901, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.945109, 0.593901, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.811755979897267*^9, 3.811755988785509*^9}, {
   3.8117561845340796`*^9, 3.8117561925741835`*^9}, 3.8117562664632573`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"c12b4535-2c6c-4021-b380-0a5008304a0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plot.png\>\"", ",", "plt"}], "]"}]], "Input",
 CellChangeTimes->{{3.811756193642501*^9, 3.8117562050130405`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"1966260a-e2f6-4790-b867-1f5442377e1a"],

Cell[BoxData["\<\"plot.png\"\>"], "Output",
 CellChangeTimes->{3.8117562068791347`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"43f775a5-3623-4c0b-816d-2c17ff57c27a"]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5c40e00a-9a34-4897-bceb-6cf3e6867d49"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 291, 5, 21, "Input",ExpressionUUID->"f8289c37-c6be-4dee-94f3-69d43ca006ed"],
Cell[874, 29, 245, 3, 24, "Output",ExpressionUUID->"66cff38d-55e6-4f83-8238-73203ac7d51d"]
}, Open  ]],
Cell[1134, 35, 695, 18, 51, "Input",ExpressionUUID->"928cf6d3-8064-4430-a1bb-8ef8bb7dd41d"],
Cell[CellGroupData[{
Cell[1854, 57, 848, 19, 21, "Input",ExpressionUUID->"e2a280af-5805-4e91-a909-5494fad5c208"],
Cell[2705, 78, 57247, 1014, 292, "Output",ExpressionUUID->"c12b4535-2c6c-4021-b380-0a5008304a0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59989, 1097, 246, 4, 21, "Input",ExpressionUUID->"1966260a-e2f6-4790-b867-1f5442377e1a"],
Cell[60238, 1103, 166, 2, 24, "Output",ExpressionUUID->"43f775a5-3623-4c0b-816d-2c17ff57c27a"]
}, Open  ]]
}
]
*)

